input {
  beats {
    port => 5044
  }
}

filter {
    if [type] == "nginx-access" {
      grok {
        patterns_dir => ["/opt/logstash/patterns"]
        match => { "message" => "%{NGINXACCESS}" }
        add_tag => ["nginx_access"]
      }
      mutate {
        convert => {
          "upstream_response_time" => "float"
          "request_time" => "float"
        }
      }
      useragent {
        source => "agent"
      }
      geoip {
        source => "clientip"
        target => "geoip"
        add_tag => [ "nginx-geoip" ]
      }
      date {
        match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
        locale => "en"
        remove_field => [ "timestamp" ]
      }
    } else if [type] == "nginx-error" {
      grok {
        match => [ "message" , "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}:( %{GREEDYDATA:errormessage}(?:, client: (?<client>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})?(?:, request: %{QS:request})?(?:, upstream: \"%{URI:upstream}\")?(?:, host: %{QS:host})?(?:, referrer: \"%{URI:referrer}\")?|%{GREEDYDATA:errormessage})"]
        overwrite => [ "message" ]
        remove_tag => ["_grokparsefailure"]
      }
      geoip {
        source => "client"
        target => "geoip"
        add_tag => [ "nginx-geoip" ]
      }
      date {
        match => [ "timestamp" , "YYYY/MM/dd HH:mm:ss" ]
        locale => "en"
        remove_field => [ "timestamp" ]
      }
    }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
	  index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
  }
}